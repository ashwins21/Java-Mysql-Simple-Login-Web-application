# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install Java 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with maven
      run: mvn -B package --file pom.xml
    
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
         # Artifact name
        name: 'LoginWebApp.war'
    # A file, directory or wildcard pattern that describes what to upload
        path: ${{github.workspace}}
        
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
    # Artifact name
        name: 'LoginWebApp.war'
    # Destination path
        path: target\*.war
        
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
         # Name of the Azure Web App
         app-name: Java-Mysql-Simple-Login-Web-application
         # Applies to Web App only: Publish profile (*.publishsettings) file contents with Web Deploy secrets
         publish-profile: $AZUREWEBAPPPUBLISH
         # Enter an existing Slot other than the Production slot
         slot-name: Dev
        # Applies to Web App only: Path to package or folder. *.zip, *.war, *.jar or a folder to deploy
         package: ${{github.workspace}}/*.war
           # Applies to Web App Containers only: Specify the fully qualified container image(s) name. For example, 'myregistry.azurecr.io/nginx:latest' or 'python:3.7.2-alpine/'. For multi-container scenario multiple container image names can be provided (multi-line separated)
        #images: 
           # Applies to Web App Containers only: Path of the Docker-Compose file. Should be a fully qualified path or relative to the default working directory. Required for multi-container scenario
        #configuration-file: # optional
         # Enter the start up command. For ex. dotnet run or dotnet run
        #startup-command: # optional
        
    
      
    
